package ca.uwaterloo.gsd.ros.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MessageSingleLineCommentUtil {
  public static void divideSingleLineCommentText(SNode node, EditorContext editorContext) {

    SNode firstComment = SNodeOperations.as(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, "ca.uwaterloo.gsd.ros.structure.MessageSingleLineComment"));
    if ((firstComment == null)) {
      return;
    }

    EditorCell_Label editorCell = ((EditorCell_Label) editorContext.getSelectedCell());
    int caretPosition = editorCell.getCaretPosition();
    String text = editorCell.getText();
    String leftPart = text.substring(0, caretPosition);
    String rightPart = text.substring(caretPosition);

    int indexInParent = SNodeOperations.getIndexInParent(node);
    if ((rightPart != null && rightPart.length() > 0) || ListSequence.fromList(SLinkOperations.getChildren(firstComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).count() > indexInParent + 1) {
      SNode secondComment = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, "ca.uwaterloo.gsd.ros.structure.MessageSingleLineComment")));
      SNodeOperations.insertNextSiblingChild(firstComment, secondComment);
      if ((rightPart != null && rightPart.length() > 0)) {
        SNode secondTextPart = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL, "jetbrains.mps.baseLanguage.structure.TextCommentPart")));
        ListSequence.fromList(SLinkOperations.getChildren(secondComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).addElement(secondTextPart);

        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL, 0x57d533a7af15ed3eL, "text"), leftPart);
        SPropertyOperations.set(secondTextPart, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL, 0x57d533a7af15ed3eL, "text"), rightPart);
      }

      while (ListSequence.fromList(SLinkOperations.getChildren(firstComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).count() > indexInParent + 1) {
        SNode part = ListSequence.fromList(SLinkOperations.getChildren(firstComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).getElement(indexInParent + 1);
        SNodeOperations.detachNode(part);
        ListSequence.fromList(SLinkOperations.getChildren(secondComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).addElement(part);
      }
      if (isEmptyString(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL, 0x57d533a7af15ed3eL, "text"))) && SNodeOperations.getIndexInParent(node) != 0) {
        SNodeOperations.detachNode(node);
      }

      editorContext.selectWRTFocusPolicy(ListSequence.fromList(SLinkOperations.getChildren(secondComment, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).first());
      ((EditorCell_Label) editorContext.getSelectedCell()).setCaretPosition(0);
    } else {
      SNode empty = SNodeOperations.insertNextSiblingChild(firstComment, SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x2d50825385ba790L, "ca.uwaterloo.gsd.ros.structure.EmptyMessageContent"))));
      editorContext.selectWRTFocusPolicy(empty);

    }


  }
  private static boolean isEmptyString(String str) {
    return str == null || str.length() == 0;
  }
}
