package ca.uwaterloo.gsd.ros.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.BehaviorRegistry;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;

public final class Message__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x2d50825385a5033L, "ca.uwaterloo.gsd.ros.structure.Message");
  private static final BehaviorRegistry REGISTRY = ConceptRegistry.getInstance().getBehaviorRegistry();

  public static final SMethod<String> getIDEDisplayString_idIviauXb0g = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getIDEDisplayString").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("IviauXb0g").registry(REGISTRY).build();
  public static final SMethod<String> getParentPopup_id1uL8CIsKxiy = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getParentPopup").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1uL8CIsKxiy").registry(REGISTRY).build();
  public static final SMethod<Integer> getSortOrder_id1uL8CIs6rGR = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("getSortOrder").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1uL8CIs6rGR").registry(REGISTRY).build();
  public static final SMethod<Iterable<SNode>> getUniquelyNamedElements_id4qSf1u1TRfj = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getUniquelyNamedElements").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4qSf1u1TRfj").registry(REGISTRY).build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(getIDEDisplayString_idIviauXb0g, getParentPopup_id1uL8CIsKxiy, getSortOrder_id1uL8CIs6rGR, getUniquelyNamedElements_id4qSf1u1TRfj);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String getIDEDisplayString_idIviauXb0g(@NotNull SNode __thisNode__) {
    return "ROS Message";
  }
  /*package*/ static String getParentPopup_id1uL8CIsKxiy(@NotNull SNode __thisNode__) {
    return null;
  }
  /*package*/ static int getSortOrder_id1uL8CIs6rGR(@NotNull SNode __thisNode__) {
    return 0;
  }
  /*package*/ static Iterable<SNode> getUniquelyNamedElements_id4qSf1u1TRfj(@NotNull SNode __thisNode__) {
    return SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x2d50825385a5033L, 0xfcf6defbf81b0ebL, "content"));
  }

  /*package*/ Message__BehaviorDescriptor() {
    super(REGISTRY);
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) getIDEDisplayString_idIviauXb0g(node));
      case 1:
        return (T) ((String) getParentPopup_id1uL8CIsKxiy(node));
      case 2:
        return (T) ((Integer) getSortOrder_id1uL8CIs6rGR(node));
      case 3:
        return (T) ((Iterable<SNode>) getUniquelyNamedElements_id4qSf1u1TRfj(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
}
