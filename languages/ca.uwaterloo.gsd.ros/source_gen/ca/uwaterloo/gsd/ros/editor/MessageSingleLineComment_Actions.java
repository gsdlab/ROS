package ca.uwaterloo.gsd.ros.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import ca.uwaterloo.gsd.ros.behavior.MessageSingleLineCommentUtil;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class MessageSingleLineComment_Actions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.INSERT, new MessageSingleLineComment_Actions.MessageSingleLineComment_Actions_INSERT(node));
  }
  public static class MessageSingleLineComment_Actions_INSERT extends AbstractCellAction {
    /*package*/ SNode myNode;
    public MessageSingleLineComment_Actions_INSERT(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "Facilitate familiar comment editing experience: add newline if enter in the end of comment line";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode selectedNode = editorContext.getSelectedNode();
      SNode selectedPart;
      if (SNodeOperations.isInstanceOf(selectedNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL, "jetbrains.mps.baseLanguage.structure.CommentPart"))) {
        selectedPart = SNodeOperations.cast(selectedNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL, "jetbrains.mps.baseLanguage.structure.CommentPart"));
      } else if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(selectedNode), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL, "jetbrains.mps.baseLanguage.structure.CommentPart"))) {
        //  commented statement comes in selection 
        selectedPart = SNodeOperations.cast(SNodeOperations.getParent(selectedNode), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL, "jetbrains.mps.baseLanguage.structure.CommentPart"));
      } else {
        return;
      }

      if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x4e6477385e4642ccL, 0x57d533a7af16ff73L, "commentPart"))).last() == selectedPart) {

        if (SNodeOperations.isInstanceOf(selectedPart, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL, "jetbrains.mps.baseLanguage.structure.TextCommentPart"))) {
          MessageSingleLineCommentUtil.divideSingleLineCommentText((SNode) selectedPart, editorContext);
        } else {
          SNodeOperations.insertNextSiblingChild(node, SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x2d50825385ba790L, "ca.uwaterloo.gsd.ros.structure.EmptyMessageContent")), null));
        }
      } else {
        SNodeOperations.insertNextSiblingChild(selectedPart, SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL, "jetbrains.mps.baseLanguage.structure.CommentPart")), null));
      }
    }
  }
}
