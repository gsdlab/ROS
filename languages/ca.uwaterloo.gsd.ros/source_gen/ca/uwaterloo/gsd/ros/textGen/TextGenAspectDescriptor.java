package ca.uwaterloo.gsd.ros.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[3];
    myId2Index[0] = 0x2d50825385a5033L;
    myId2Index[1] = 0x2d50825385ba790L;
    myId2Index[2] = 0x4e6477385e4642ccL;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new Message_TextGen();
      case 1:
        return new EmptyMessageContent_TextGen();
      case 2:
        return new MessageSingleLineComment_TextGen();
      default:
        return null;
    }
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0x73b2b904295848f1L, 0x87324d9d995324d8L, 0x2d50825385a5033L, "ca.uwaterloo.gsd.ros.structure.Message"))) {
        String fname = getFileName_Message(root);
        String ext = getFileExtension_Message(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
    }
  }
  private static String getFileName_Message(SNode node) {
    return node.getName();
  }
  private static String getFileExtension_Message(SNode node) {
    return "msg";
  }
}
